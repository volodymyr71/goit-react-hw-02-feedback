{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["FeedbackOptions","options","onLeaveFeedback","className","Object","keys","map","option","name","onClick","uuidv4","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","App","state","increamentState","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","percentageGood","Math","ceil","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAmBeA,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,qBAAKC,UAAU,oBAAf,SACGC,OAAOC,KAAKJ,GAASK,KAAI,SAACC,GAAD,OACxB,wBACEJ,UAAU,SACVK,KAAMD,EAENE,QAASP,EAJX,SAMGK,GAHIG,qBCGEC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,oBAAGb,UAAU,iBAAb,mBAAqCS,KACrC,oBAAGT,UAAU,iBAAb,sBAAwCU,KACxC,oBAAGV,UAAU,iBAAb,kBAAoCW,KACpC,oBAAGX,UAAU,iBAAb,oBAAsCY,KACtC,oBAAGZ,UAAU,iBAAb,gCAAkDa,EAAlD,YCCWC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKhB,UAAU,mBAAf,UACE,mBAAGA,UAAU,gBAAb,SAA8Be,IAC7BC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,qBAAKlB,UAAU,mBAAf,SACE,mBAAGA,UAAU,gBAAb,SAA8BkB,OCsEnBC,E,4MAnEbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,gBAAkB,SAACC,GACK,SAAlBA,EAAEC,OAAOlB,MACX,EAAKmB,UAAS,SAACC,GAAD,MAAgB,CAC5BhB,KAAMgB,EAAUhB,KAAO,MAGL,YAAlBa,EAAEC,OAAOlB,MACX,EAAKmB,UAAS,SAACC,GAAD,MAAgB,CAC5Bf,QAASe,EAAUf,QAAU,MAGX,QAAlBY,EAAEC,OAAOlB,MACX,EAAKmB,UAAS,SAACC,GAAD,MAAgB,CAC5Bd,IAAKc,EAAUd,IAAM,O,EAK3Be,mBAAqB,WAEnB,OADY,EAAKN,MAAMX,KAAO,EAAKW,MAAMT,IAAM,EAAKS,MAAMV,S,EAG5DiB,gCAAkC,WAChC,IAAIC,EAAiBC,KAAKC,KACvB,EAAKV,MAAMX,KAAO,EAAKiB,qBAAwB,KAElD,OAAI,EAAKA,qBAAuB,EACvBE,EAEgB,Q,4CAG3B,WACE,OACE,qBAAK5B,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,CAASe,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAASiC,KAAKX,MACdrB,gBAAiBgC,KAAKV,oBAIzBU,KAAKL,qBAAuB,EAC3B,cAAC,EAAD,CAASX,MAAM,aAAf,SACE,cAAC,EAAD,CACEN,KAAMsB,KAAKX,MAAMX,KACjBC,QAASqB,KAAKX,MAAMV,QACpBC,IAAKoB,KAAKX,MAAMT,IAChBC,MAAOmB,KAAKL,qBACZb,mBAAoBkB,KAAKJ,sCAI7B,cAAC,EAAD,CAAcT,QAAQ,+B,GA7DhBc,IAAMC,WCFxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e5167c8e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className=\"Feedback_controls\">\r\n    {Object.keys(options).map((option) => (\r\n      <button\r\n        className=\"button\"\r\n        name={option}\r\n        key={uuidv4()}\r\n        onClick={onLeaveFeedback}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <p className=\"Feedback_value\">Good: {good}</p>\r\n    <p className=\"Feedback_value\">Neutral: {neutral}</p>\r\n    <p className=\"Feedback_value\">Bad: {bad}</p>\r\n    <p className=\"Feedback_value\">Total: {total}</p>\r\n    <p className=\"Feedback_value\">Positive feedback: {positivePercentage} %</p>\r\n  </>\r\n);\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <div className=\"Feedback_section\">\r\n    <p className=\"Feedback_text\">{title}</p>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <div className=\"Feedback_section\">\r\n    <p className=\"Feedback_text\">{message}</p>\r\n  </div>\r\n);\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import \"./App.css\";\nimport React from \"react\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport Section from \"./components/Section/Section\";\nimport Notification from \"./components/Notification/Notification\";\n\nclass App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  increamentState = (e) => {\n    if (e.target.name === \"good\") {\n      this.setState((prevState) => ({\n        good: prevState.good + 1,\n      }));\n    }\n    if (e.target.name === \"neutral\") {\n      this.setState((prevState) => ({\n        neutral: prevState.neutral + 1,\n      }));\n    }\n    if (e.target.name === \"bad\") {\n      this.setState((prevState) => ({\n        bad: prevState.bad + 1,\n      }));\n    }\n  };\n\n  countTotalFeedback = () => {\n    let total = this.state.good + this.state.bad + this.state.neutral;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    let percentageGood = Math.ceil(\n      (this.state.good / this.countTotalFeedback()) * 100\n    );\n    if (this.countTotalFeedback() > 0) {\n      return percentageGood;\n    }\n    return (percentageGood = \"none\");\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"Feedback\">\n          <Section title=\"Please leave feedback\">\n            <FeedbackOptions\n              options={this.state}\n              onLeaveFeedback={this.increamentState}\n            />\n          </Section>\n\n          {this.countTotalFeedback() > 0 ? (\n            <Section title=\"Statistics\">\n              <Statistics\n                good={this.state.good}\n                neutral={this.state.neutral}\n                bad={this.state.bad}\n                total={this.countTotalFeedback()}\n                positivePercentage={this.countPositiveFeedbackPercentage()}\n              />\n            </Section>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}